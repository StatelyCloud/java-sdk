// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: db/transaction.proto
// Protobuf Java Version: 4.32.0

package cloud.stately.db;

@com.google.protobuf.Generated
public interface TransactionRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:stately.db.TransactionRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * message_id should be set to a unique number per request in this
   * transaction. It will be returned with responses to make it easier to match
   * up specific responses with their requests.
   * </pre>
   *
   * <code>uint32 message_id = 1 [json_name = "messageId"];</code>
   * @return The messageId.
   */
  int getMessageId();

  /**
   * <pre>
   * begin sets up options for the transaction, such as what store we're
   * operating on. It is not acknowledged unless there is an error, which
   * kills the whole transaction.
   * </pre>
   *
   * <code>.stately.db.TransactionBegin begin = 2 [json_name = "begin"];</code>
   * @return Whether the begin field is set.
   */
  boolean hasBegin();
  /**
   * <pre>
   * begin sets up options for the transaction, such as what store we're
   * operating on. It is not acknowledged unless there is an error, which
   * kills the whole transaction.
   * </pre>
   *
   * <code>.stately.db.TransactionBegin begin = 2 [json_name = "begin"];</code>
   * @return The begin.
   */
  cloud.stately.db.TransactionBegin getBegin();
  /**
   * <pre>
   * begin sets up options for the transaction, such as what store we're
   * operating on. It is not acknowledged unless there is an error, which
   * kills the whole transaction.
   * </pre>
   *
   * <code>.stately.db.TransactionBegin begin = 2 [json_name = "begin"];</code>
   */
  cloud.stately.db.TransactionBeginOrBuilder getBeginOrBuilder();

  /**
   * <pre>
   * The client is requesting to get one or more items. The results will be
   * returned in TransactionResponse#get_results.
   * </pre>
   *
   * <code>.stately.db.TransactionGet get_items = 3 [json_name = "getItems"];</code>
   * @return Whether the getItems field is set.
   */
  boolean hasGetItems();
  /**
   * <pre>
   * The client is requesting to get one or more items. The results will be
   * returned in TransactionResponse#get_results.
   * </pre>
   *
   * <code>.stately.db.TransactionGet get_items = 3 [json_name = "getItems"];</code>
   * @return The getItems.
   */
  cloud.stately.db.TransactionGet getGetItems();
  /**
   * <pre>
   * The client is requesting to get one or more items. The results will be
   * returned in TransactionResponse#get_results.
   * </pre>
   *
   * <code>.stately.db.TransactionGet get_items = 3 [json_name = "getItems"];</code>
   */
  cloud.stately.db.TransactionGetOrBuilder getGetItemsOrBuilder();

  /**
   * <pre>
   * The client is requesting a list of a path prefix. The results will be
   * returned in TransactionResponse#list.
   * </pre>
   *
   * <code>.stately.db.TransactionBeginList begin_list = 4 [json_name = "beginList"];</code>
   * @return Whether the beginList field is set.
   */
  boolean hasBeginList();
  /**
   * <pre>
   * The client is requesting a list of a path prefix. The results will be
   * returned in TransactionResponse#list.
   * </pre>
   *
   * <code>.stately.db.TransactionBeginList begin_list = 4 [json_name = "beginList"];</code>
   * @return The beginList.
   */
  cloud.stately.db.TransactionBeginList getBeginList();
  /**
   * <pre>
   * The client is requesting a list of a path prefix. The results will be
   * returned in TransactionResponse#list.
   * </pre>
   *
   * <code>.stately.db.TransactionBeginList begin_list = 4 [json_name = "beginList"];</code>
   */
  cloud.stately.db.TransactionBeginListOrBuilder getBeginListOrBuilder();

  /**
   * <pre>
   * ContinueList takes the token from a BeginList call and returns the next
   * "page" of results based on the original query parameters and pagination
   * options. It has few options because it is a continuation of a previous
   * list operation. It will return a new  token which can be used for
   * another ContinueList call, and so on. Each time you call either
   * ContinueList, you should pass the latest version of the token, and then
   * use the new token from the result in subsequent calls. Calls to
   * ContinueList are tied to the authorization of the original BeginList
   * call, so if the original BeginList call was allowed, ContinueList with
   * its token should also be allowed.
   * </pre>
   *
   * <code>.stately.db.TransactionContinueList continue_list = 5 [json_name = "continueList"];</code>
   * @return Whether the continueList field is set.
   */
  boolean hasContinueList();
  /**
   * <pre>
   * ContinueList takes the token from a BeginList call and returns the next
   * "page" of results based on the original query parameters and pagination
   * options. It has few options because it is a continuation of a previous
   * list operation. It will return a new  token which can be used for
   * another ContinueList call, and so on. Each time you call either
   * ContinueList, you should pass the latest version of the token, and then
   * use the new token from the result in subsequent calls. Calls to
   * ContinueList are tied to the authorization of the original BeginList
   * call, so if the original BeginList call was allowed, ContinueList with
   * its token should also be allowed.
   * </pre>
   *
   * <code>.stately.db.TransactionContinueList continue_list = 5 [json_name = "continueList"];</code>
   * @return The continueList.
   */
  cloud.stately.db.TransactionContinueList getContinueList();
  /**
   * <pre>
   * ContinueList takes the token from a BeginList call and returns the next
   * "page" of results based on the original query parameters and pagination
   * options. It has few options because it is a continuation of a previous
   * list operation. It will return a new  token which can be used for
   * another ContinueList call, and so on. Each time you call either
   * ContinueList, you should pass the latest version of the token, and then
   * use the new token from the result in subsequent calls. Calls to
   * ContinueList are tied to the authorization of the original BeginList
   * call, so if the original BeginList call was allowed, ContinueList with
   * its token should also be allowed.
   * </pre>
   *
   * <code>.stately.db.TransactionContinueList continue_list = 5 [json_name = "continueList"];</code>
   */
  cloud.stately.db.TransactionContinueListOrBuilder getContinueListOrBuilder();

  /**
   * <pre>
   * The client is requesting to create new items. This is acknowledged in
   * TransactionResponse#put_ack which contains the item's tentative full path
   * (pending the transaction's commit). The final result of all puts will be
   * returned in TransactionFinished#put_results.
   * </pre>
   *
   * <code>.stately.db.TransactionPut put_items = 6 [json_name = "putItems"];</code>
   * @return Whether the putItems field is set.
   */
  boolean hasPutItems();
  /**
   * <pre>
   * The client is requesting to create new items. This is acknowledged in
   * TransactionResponse#put_ack which contains the item's tentative full path
   * (pending the transaction's commit). The final result of all puts will be
   * returned in TransactionFinished#put_results.
   * </pre>
   *
   * <code>.stately.db.TransactionPut put_items = 6 [json_name = "putItems"];</code>
   * @return The putItems.
   */
  cloud.stately.db.TransactionPut getPutItems();
  /**
   * <pre>
   * The client is requesting to create new items. This is acknowledged in
   * TransactionResponse#put_ack which contains the item's tentative full path
   * (pending the transaction's commit). The final result of all puts will be
   * returned in TransactionFinished#put_results.
   * </pre>
   *
   * <code>.stately.db.TransactionPut put_items = 6 [json_name = "putItems"];</code>
   */
  cloud.stately.db.TransactionPutOrBuilder getPutItemsOrBuilder();

  /**
   * <pre>
   * The client is requesting to delete items. It is not acknowledged unless
   * there is an error, which kills the whole transaction. The final result of
   * all deletes will be returned in TransactionFinished#delete_results.
   * </pre>
   *
   * <code>.stately.db.TransactionDelete delete_items = 7 [json_name = "deleteItems"];</code>
   * @return Whether the deleteItems field is set.
   */
  boolean hasDeleteItems();
  /**
   * <pre>
   * The client is requesting to delete items. It is not acknowledged unless
   * there is an error, which kills the whole transaction. The final result of
   * all deletes will be returned in TransactionFinished#delete_results.
   * </pre>
   *
   * <code>.stately.db.TransactionDelete delete_items = 7 [json_name = "deleteItems"];</code>
   * @return The deleteItems.
   */
  cloud.stately.db.TransactionDelete getDeleteItems();
  /**
   * <pre>
   * The client is requesting to delete items. It is not acknowledged unless
   * there is an error, which kills the whole transaction. The final result of
   * all deletes will be returned in TransactionFinished#delete_results.
   * </pre>
   *
   * <code>.stately.db.TransactionDelete delete_items = 7 [json_name = "deleteItems"];</code>
   */
  cloud.stately.db.TransactionDeleteOrBuilder getDeleteItemsOrBuilder();

  /**
   * <pre>
   * The client is requesting to commit the transaction. The final results of
   * the transaction will be returned in TransactionResponse#finished.
   * </pre>
   *
   * <code>.google.protobuf.Empty commit = 8 [json_name = "commit"];</code>
   * @return Whether the commit field is set.
   */
  boolean hasCommit();
  /**
   * <pre>
   * The client is requesting to commit the transaction. The final results of
   * the transaction will be returned in TransactionResponse#finished.
   * </pre>
   *
   * <code>.google.protobuf.Empty commit = 8 [json_name = "commit"];</code>
   * @return The commit.
   */
  com.google.protobuf.Empty getCommit();
  /**
   * <pre>
   * The client is requesting to commit the transaction. The final results of
   * the transaction will be returned in TransactionResponse#finished.
   * </pre>
   *
   * <code>.google.protobuf.Empty commit = 8 [json_name = "commit"];</code>
   */
  com.google.protobuf.EmptyOrBuilder getCommitOrBuilder();

  /**
   * <pre>
   * The client is requesting to abort/rollback the transaction.
   * </pre>
   *
   * <code>.google.protobuf.Empty abort = 9 [json_name = "abort"];</code>
   * @return Whether the abort field is set.
   */
  boolean hasAbort();
  /**
   * <pre>
   * The client is requesting to abort/rollback the transaction.
   * </pre>
   *
   * <code>.google.protobuf.Empty abort = 9 [json_name = "abort"];</code>
   * @return The abort.
   */
  com.google.protobuf.Empty getAbort();
  /**
   * <pre>
   * The client is requesting to abort/rollback the transaction.
   * </pre>
   *
   * <code>.google.protobuf.Empty abort = 9 [json_name = "abort"];</code>
   */
  com.google.protobuf.EmptyOrBuilder getAbortOrBuilder();

  cloud.stately.db.TransactionRequest.CommandCase getCommandCase();
}
