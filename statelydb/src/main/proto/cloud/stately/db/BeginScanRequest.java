// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: db/scan.proto
// Protobuf Java Version: 4.32.0

package cloud.stately.db;

/**
 * Protobuf type {@code stately.db.BeginScanRequest}
 */
@com.google.protobuf.Generated
public final class BeginScanRequest extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:stately.db.BeginScanRequest)
    BeginScanRequestOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 32,
      /* patch= */ 0,
      /* suffix= */ "",
      BeginScanRequest.class.getName());
  }
  // Use BeginScanRequest.newBuilder() to construct.
  private BeginScanRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private BeginScanRequest() {
    filterConditions_ = java.util.Collections.emptyList();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return cloud.stately.db.ScanProto.internal_static_stately_db_BeginScanRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return cloud.stately.db.ScanProto.internal_static_stately_db_BeginScanRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            cloud.stately.db.BeginScanRequest.class, cloud.stately.db.BeginScanRequest.Builder.class);
  }

  private int bitField0_;
  public static final int STORE_ID_FIELD_NUMBER = 1;
  private long storeId_ = 0L;
  /**
   * <pre>
   * store_id is a globally unique Store ID, which can be looked up from the
   * console or CLI.
   * </pre>
   *
   * <code>uint64 store_id = 1 [json_name = "storeId"];</code>
   * @return The storeId.
   */
  @java.lang.Override
  public long getStoreId() {
    return storeId_;
  }

  public static final int FILTER_CONDITIONS_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private java.util.List<cloud.stately.db.FilterCondition> filterConditions_;
  /**
   * <pre>
   * filter_conditions is a set of conditions to filter the scan result by.
   * If no conditions are provided, all items in the store will be returned.
   * Filter conditions are combined with OR.
   * </pre>
   *
   * <code>repeated .stately.db.FilterCondition filter_conditions = 2 [json_name = "filterConditions"];</code>
   */
  @java.lang.Override
  public java.util.List<cloud.stately.db.FilterCondition> getFilterConditionsList() {
    return filterConditions_;
  }
  /**
   * <pre>
   * filter_conditions is a set of conditions to filter the scan result by.
   * If no conditions are provided, all items in the store will be returned.
   * Filter conditions are combined with OR.
   * </pre>
   *
   * <code>repeated .stately.db.FilterCondition filter_conditions = 2 [json_name = "filterConditions"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends cloud.stately.db.FilterConditionOrBuilder> 
      getFilterConditionsOrBuilderList() {
    return filterConditions_;
  }
  /**
   * <pre>
   * filter_conditions is a set of conditions to filter the scan result by.
   * If no conditions are provided, all items in the store will be returned.
   * Filter conditions are combined with OR.
   * </pre>
   *
   * <code>repeated .stately.db.FilterCondition filter_conditions = 2 [json_name = "filterConditions"];</code>
   */
  @java.lang.Override
  public int getFilterConditionsCount() {
    return filterConditions_.size();
  }
  /**
   * <pre>
   * filter_conditions is a set of conditions to filter the scan result by.
   * If no conditions are provided, all items in the store will be returned.
   * Filter conditions are combined with OR.
   * </pre>
   *
   * <code>repeated .stately.db.FilterCondition filter_conditions = 2 [json_name = "filterConditions"];</code>
   */
  @java.lang.Override
  public cloud.stately.db.FilterCondition getFilterConditions(int index) {
    return filterConditions_.get(index);
  }
  /**
   * <pre>
   * filter_conditions is a set of conditions to filter the scan result by.
   * If no conditions are provided, all items in the store will be returned.
   * Filter conditions are combined with OR.
   * </pre>
   *
   * <code>repeated .stately.db.FilterCondition filter_conditions = 2 [json_name = "filterConditions"];</code>
   */
  @java.lang.Override
  public cloud.stately.db.FilterConditionOrBuilder getFilterConditionsOrBuilder(
      int index) {
    return filterConditions_.get(index);
  }

  public static final int LIMIT_FIELD_NUMBER = 3;
  private int limit_ = 0;
  /**
   * <pre>
   * limit is the maximum number of items to return. If this is not specified or
   * set to 0, it will return one server side page of items, which may contain zero of your selected
   * item types and hence be an empty response.
   * Be sure to check token.can_continue to see if you have more items left to fetch.
   * </pre>
   *
   * <code>uint32 limit = 3 [json_name = "limit"];</code>
   * @return The limit.
   */
  @java.lang.Override
  public int getLimit() {
    return limit_;
  }

  public static final int SEGMENTATION_PARAMS_FIELD_NUMBER = 4;
  private cloud.stately.db.SegmentationParams segmentationParams_;
  /**
   * <pre>
   * segmentation_params is used to enable parallelization of the list operation.
   * This is useful for bulk processing of large stores.
   * If this field is set then the list operation will be split into segment_params.total_segments
   * and this request will process the segment defined in segmentation_params.segment_index.
   * See SegmentationParams for more details.
   * Please be warned that parallelization will result on increase throughput to your store
   * which may result in throttling.
   * </pre>
   *
   * <code>.stately.db.SegmentationParams segmentation_params = 4 [json_name = "segmentationParams"];</code>
   * @return Whether the segmentationParams field is set.
   */
  @java.lang.Override
  public boolean hasSegmentationParams() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * segmentation_params is used to enable parallelization of the list operation.
   * This is useful for bulk processing of large stores.
   * If this field is set then the list operation will be split into segment_params.total_segments
   * and this request will process the segment defined in segmentation_params.segment_index.
   * See SegmentationParams for more details.
   * Please be warned that parallelization will result on increase throughput to your store
   * which may result in throttling.
   * </pre>
   *
   * <code>.stately.db.SegmentationParams segmentation_params = 4 [json_name = "segmentationParams"];</code>
   * @return The segmentationParams.
   */
  @java.lang.Override
  public cloud.stately.db.SegmentationParams getSegmentationParams() {
    return segmentationParams_ == null ? cloud.stately.db.SegmentationParams.getDefaultInstance() : segmentationParams_;
  }
  /**
   * <pre>
   * segmentation_params is used to enable parallelization of the list operation.
   * This is useful for bulk processing of large stores.
   * If this field is set then the list operation will be split into segment_params.total_segments
   * and this request will process the segment defined in segmentation_params.segment_index.
   * See SegmentationParams for more details.
   * Please be warned that parallelization will result on increase throughput to your store
   * which may result in throttling.
   * </pre>
   *
   * <code>.stately.db.SegmentationParams segmentation_params = 4 [json_name = "segmentationParams"];</code>
   */
  @java.lang.Override
  public cloud.stately.db.SegmentationParamsOrBuilder getSegmentationParamsOrBuilder() {
    return segmentationParams_ == null ? cloud.stately.db.SegmentationParams.getDefaultInstance() : segmentationParams_;
  }

  public static final int SCHEMA_VERSION_ID_FIELD_NUMBER = 5;
  private int schemaVersionId_ = 0;
  /**
   * <pre>
   * schema_version_id is the version of the store's schema to use to interpret
   * items. If there is no version with this ID, the operation will error with
   * SchemaVersionNotFound error. You should not have to set this manually as
   * your generated SDK should know its schema version and wire this in for you.
   * </pre>
   *
   * <code>uint32 schema_version_id = 5 [json_name = "schemaVersionId"];</code>
   * @return The schemaVersionId.
   */
  @java.lang.Override
  public int getSchemaVersionId() {
    return schemaVersionId_;
  }

  public static final int SCHEMA_ID_FIELD_NUMBER = 6;
  private long schemaId_ = 0L;
  /**
   * <pre>
   * schema_id refers to the schema to use for this operation.
   * If the store_id does not have a schema with this ID, the operation will
   * error with SchemaNotFound error. You should not have to set this manually
   * as your generated SDK should know its schema and wire this in for you.
   * </pre>
   *
   * <code>uint64 schema_id = 6 [json_name = "schemaId"];</code>
   * @return The schemaId.
   */
  @java.lang.Override
  public long getSchemaId() {
    return schemaId_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (storeId_ != 0L) {
      output.writeUInt64(1, storeId_);
    }
    for (int i = 0; i < filterConditions_.size(); i++) {
      output.writeMessage(2, filterConditions_.get(i));
    }
    if (limit_ != 0) {
      output.writeUInt32(3, limit_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(4, getSegmentationParams());
    }
    if (schemaVersionId_ != 0) {
      output.writeUInt32(5, schemaVersionId_);
    }
    if (schemaId_ != 0L) {
      output.writeUInt64(6, schemaId_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (storeId_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(1, storeId_);
    }
    for (int i = 0; i < filterConditions_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, filterConditions_.get(i));
    }
    if (limit_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(3, limit_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getSegmentationParams());
    }
    if (schemaVersionId_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(5, schemaVersionId_);
    }
    if (schemaId_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(6, schemaId_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof cloud.stately.db.BeginScanRequest)) {
      return super.equals(obj);
    }
    cloud.stately.db.BeginScanRequest other = (cloud.stately.db.BeginScanRequest) obj;

    if (getStoreId()
        != other.getStoreId()) return false;
    if (!getFilterConditionsList()
        .equals(other.getFilterConditionsList())) return false;
    if (getLimit()
        != other.getLimit()) return false;
    if (hasSegmentationParams() != other.hasSegmentationParams()) return false;
    if (hasSegmentationParams()) {
      if (!getSegmentationParams()
          .equals(other.getSegmentationParams())) return false;
    }
    if (getSchemaVersionId()
        != other.getSchemaVersionId()) return false;
    if (getSchemaId()
        != other.getSchemaId()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + STORE_ID_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getStoreId());
    if (getFilterConditionsCount() > 0) {
      hash = (37 * hash) + FILTER_CONDITIONS_FIELD_NUMBER;
      hash = (53 * hash) + getFilterConditionsList().hashCode();
    }
    hash = (37 * hash) + LIMIT_FIELD_NUMBER;
    hash = (53 * hash) + getLimit();
    if (hasSegmentationParams()) {
      hash = (37 * hash) + SEGMENTATION_PARAMS_FIELD_NUMBER;
      hash = (53 * hash) + getSegmentationParams().hashCode();
    }
    hash = (37 * hash) + SCHEMA_VERSION_ID_FIELD_NUMBER;
    hash = (53 * hash) + getSchemaVersionId();
    hash = (37 * hash) + SCHEMA_ID_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getSchemaId());
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static cloud.stately.db.BeginScanRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static cloud.stately.db.BeginScanRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static cloud.stately.db.BeginScanRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static cloud.stately.db.BeginScanRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static cloud.stately.db.BeginScanRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static cloud.stately.db.BeginScanRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static cloud.stately.db.BeginScanRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static cloud.stately.db.BeginScanRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static cloud.stately.db.BeginScanRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static cloud.stately.db.BeginScanRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static cloud.stately.db.BeginScanRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static cloud.stately.db.BeginScanRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(cloud.stately.db.BeginScanRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code stately.db.BeginScanRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:stately.db.BeginScanRequest)
      cloud.stately.db.BeginScanRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cloud.stately.db.ScanProto.internal_static_stately_db_BeginScanRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cloud.stately.db.ScanProto.internal_static_stately_db_BeginScanRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cloud.stately.db.BeginScanRequest.class, cloud.stately.db.BeginScanRequest.Builder.class);
    }

    // Construct using cloud.stately.db.BeginScanRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage
              .alwaysUseFieldBuilders) {
        internalGetFilterConditionsFieldBuilder();
        internalGetSegmentationParamsFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      storeId_ = 0L;
      if (filterConditionsBuilder_ == null) {
        filterConditions_ = java.util.Collections.emptyList();
      } else {
        filterConditions_ = null;
        filterConditionsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      limit_ = 0;
      segmentationParams_ = null;
      if (segmentationParamsBuilder_ != null) {
        segmentationParamsBuilder_.dispose();
        segmentationParamsBuilder_ = null;
      }
      schemaVersionId_ = 0;
      schemaId_ = 0L;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return cloud.stately.db.ScanProto.internal_static_stately_db_BeginScanRequest_descriptor;
    }

    @java.lang.Override
    public cloud.stately.db.BeginScanRequest getDefaultInstanceForType() {
      return cloud.stately.db.BeginScanRequest.getDefaultInstance();
    }

    @java.lang.Override
    public cloud.stately.db.BeginScanRequest build() {
      cloud.stately.db.BeginScanRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public cloud.stately.db.BeginScanRequest buildPartial() {
      cloud.stately.db.BeginScanRequest result = new cloud.stately.db.BeginScanRequest(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(cloud.stately.db.BeginScanRequest result) {
      if (filterConditionsBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          filterConditions_ = java.util.Collections.unmodifiableList(filterConditions_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.filterConditions_ = filterConditions_;
      } else {
        result.filterConditions_ = filterConditionsBuilder_.build();
      }
    }

    private void buildPartial0(cloud.stately.db.BeginScanRequest result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.storeId_ = storeId_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.limit_ = limit_;
      }
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.segmentationParams_ = segmentationParamsBuilder_ == null
            ? segmentationParams_
            : segmentationParamsBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.schemaVersionId_ = schemaVersionId_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.schemaId_ = schemaId_;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof cloud.stately.db.BeginScanRequest) {
        return mergeFrom((cloud.stately.db.BeginScanRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(cloud.stately.db.BeginScanRequest other) {
      if (other == cloud.stately.db.BeginScanRequest.getDefaultInstance()) return this;
      if (other.getStoreId() != 0L) {
        setStoreId(other.getStoreId());
      }
      if (filterConditionsBuilder_ == null) {
        if (!other.filterConditions_.isEmpty()) {
          if (filterConditions_.isEmpty()) {
            filterConditions_ = other.filterConditions_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureFilterConditionsIsMutable();
            filterConditions_.addAll(other.filterConditions_);
          }
          onChanged();
        }
      } else {
        if (!other.filterConditions_.isEmpty()) {
          if (filterConditionsBuilder_.isEmpty()) {
            filterConditionsBuilder_.dispose();
            filterConditionsBuilder_ = null;
            filterConditions_ = other.filterConditions_;
            bitField0_ = (bitField0_ & ~0x00000002);
            filterConditionsBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 internalGetFilterConditionsFieldBuilder() : null;
          } else {
            filterConditionsBuilder_.addAllMessages(other.filterConditions_);
          }
        }
      }
      if (other.getLimit() != 0) {
        setLimit(other.getLimit());
      }
      if (other.hasSegmentationParams()) {
        mergeSegmentationParams(other.getSegmentationParams());
      }
      if (other.getSchemaVersionId() != 0) {
        setSchemaVersionId(other.getSchemaVersionId());
      }
      if (other.getSchemaId() != 0L) {
        setSchemaId(other.getSchemaId());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              storeId_ = input.readUInt64();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 18: {
              cloud.stately.db.FilterCondition m =
                  input.readMessage(
                      cloud.stately.db.FilterCondition.parser(),
                      extensionRegistry);
              if (filterConditionsBuilder_ == null) {
                ensureFilterConditionsIsMutable();
                filterConditions_.add(m);
              } else {
                filterConditionsBuilder_.addMessage(m);
              }
              break;
            } // case 18
            case 24: {
              limit_ = input.readUInt32();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 34: {
              input.readMessage(
                  internalGetSegmentationParamsFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 40: {
              schemaVersionId_ = input.readUInt32();
              bitField0_ |= 0x00000010;
              break;
            } // case 40
            case 48: {
              schemaId_ = input.readUInt64();
              bitField0_ |= 0x00000020;
              break;
            } // case 48
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private long storeId_ ;
    /**
     * <pre>
     * store_id is a globally unique Store ID, which can be looked up from the
     * console or CLI.
     * </pre>
     *
     * <code>uint64 store_id = 1 [json_name = "storeId"];</code>
     * @return The storeId.
     */
    @java.lang.Override
    public long getStoreId() {
      return storeId_;
    }
    /**
     * <pre>
     * store_id is a globally unique Store ID, which can be looked up from the
     * console or CLI.
     * </pre>
     *
     * <code>uint64 store_id = 1 [json_name = "storeId"];</code>
     * @param value The storeId to set.
     * @return This builder for chaining.
     */
    public Builder setStoreId(long value) {

      storeId_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * store_id is a globally unique Store ID, which can be looked up from the
     * console or CLI.
     * </pre>
     *
     * <code>uint64 store_id = 1 [json_name = "storeId"];</code>
     * @return This builder for chaining.
     */
    public Builder clearStoreId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      storeId_ = 0L;
      onChanged();
      return this;
    }

    private java.util.List<cloud.stately.db.FilterCondition> filterConditions_ =
      java.util.Collections.emptyList();
    private void ensureFilterConditionsIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        filterConditions_ = new java.util.ArrayList<cloud.stately.db.FilterCondition>(filterConditions_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        cloud.stately.db.FilterCondition, cloud.stately.db.FilterCondition.Builder, cloud.stately.db.FilterConditionOrBuilder> filterConditionsBuilder_;

    /**
     * <pre>
     * filter_conditions is a set of conditions to filter the scan result by.
     * If no conditions are provided, all items in the store will be returned.
     * Filter conditions are combined with OR.
     * </pre>
     *
     * <code>repeated .stately.db.FilterCondition filter_conditions = 2 [json_name = "filterConditions"];</code>
     */
    public java.util.List<cloud.stately.db.FilterCondition> getFilterConditionsList() {
      if (filterConditionsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(filterConditions_);
      } else {
        return filterConditionsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * filter_conditions is a set of conditions to filter the scan result by.
     * If no conditions are provided, all items in the store will be returned.
     * Filter conditions are combined with OR.
     * </pre>
     *
     * <code>repeated .stately.db.FilterCondition filter_conditions = 2 [json_name = "filterConditions"];</code>
     */
    public int getFilterConditionsCount() {
      if (filterConditionsBuilder_ == null) {
        return filterConditions_.size();
      } else {
        return filterConditionsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * filter_conditions is a set of conditions to filter the scan result by.
     * If no conditions are provided, all items in the store will be returned.
     * Filter conditions are combined with OR.
     * </pre>
     *
     * <code>repeated .stately.db.FilterCondition filter_conditions = 2 [json_name = "filterConditions"];</code>
     */
    public cloud.stately.db.FilterCondition getFilterConditions(int index) {
      if (filterConditionsBuilder_ == null) {
        return filterConditions_.get(index);
      } else {
        return filterConditionsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * filter_conditions is a set of conditions to filter the scan result by.
     * If no conditions are provided, all items in the store will be returned.
     * Filter conditions are combined with OR.
     * </pre>
     *
     * <code>repeated .stately.db.FilterCondition filter_conditions = 2 [json_name = "filterConditions"];</code>
     */
    public Builder setFilterConditions(
        int index, cloud.stately.db.FilterCondition value) {
      if (filterConditionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFilterConditionsIsMutable();
        filterConditions_.set(index, value);
        onChanged();
      } else {
        filterConditionsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * filter_conditions is a set of conditions to filter the scan result by.
     * If no conditions are provided, all items in the store will be returned.
     * Filter conditions are combined with OR.
     * </pre>
     *
     * <code>repeated .stately.db.FilterCondition filter_conditions = 2 [json_name = "filterConditions"];</code>
     */
    public Builder setFilterConditions(
        int index, cloud.stately.db.FilterCondition.Builder builderForValue) {
      if (filterConditionsBuilder_ == null) {
        ensureFilterConditionsIsMutable();
        filterConditions_.set(index, builderForValue.build());
        onChanged();
      } else {
        filterConditionsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * filter_conditions is a set of conditions to filter the scan result by.
     * If no conditions are provided, all items in the store will be returned.
     * Filter conditions are combined with OR.
     * </pre>
     *
     * <code>repeated .stately.db.FilterCondition filter_conditions = 2 [json_name = "filterConditions"];</code>
     */
    public Builder addFilterConditions(cloud.stately.db.FilterCondition value) {
      if (filterConditionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFilterConditionsIsMutable();
        filterConditions_.add(value);
        onChanged();
      } else {
        filterConditionsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * filter_conditions is a set of conditions to filter the scan result by.
     * If no conditions are provided, all items in the store will be returned.
     * Filter conditions are combined with OR.
     * </pre>
     *
     * <code>repeated .stately.db.FilterCondition filter_conditions = 2 [json_name = "filterConditions"];</code>
     */
    public Builder addFilterConditions(
        int index, cloud.stately.db.FilterCondition value) {
      if (filterConditionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFilterConditionsIsMutable();
        filterConditions_.add(index, value);
        onChanged();
      } else {
        filterConditionsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * filter_conditions is a set of conditions to filter the scan result by.
     * If no conditions are provided, all items in the store will be returned.
     * Filter conditions are combined with OR.
     * </pre>
     *
     * <code>repeated .stately.db.FilterCondition filter_conditions = 2 [json_name = "filterConditions"];</code>
     */
    public Builder addFilterConditions(
        cloud.stately.db.FilterCondition.Builder builderForValue) {
      if (filterConditionsBuilder_ == null) {
        ensureFilterConditionsIsMutable();
        filterConditions_.add(builderForValue.build());
        onChanged();
      } else {
        filterConditionsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * filter_conditions is a set of conditions to filter the scan result by.
     * If no conditions are provided, all items in the store will be returned.
     * Filter conditions are combined with OR.
     * </pre>
     *
     * <code>repeated .stately.db.FilterCondition filter_conditions = 2 [json_name = "filterConditions"];</code>
     */
    public Builder addFilterConditions(
        int index, cloud.stately.db.FilterCondition.Builder builderForValue) {
      if (filterConditionsBuilder_ == null) {
        ensureFilterConditionsIsMutable();
        filterConditions_.add(index, builderForValue.build());
        onChanged();
      } else {
        filterConditionsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * filter_conditions is a set of conditions to filter the scan result by.
     * If no conditions are provided, all items in the store will be returned.
     * Filter conditions are combined with OR.
     * </pre>
     *
     * <code>repeated .stately.db.FilterCondition filter_conditions = 2 [json_name = "filterConditions"];</code>
     */
    public Builder addAllFilterConditions(
        java.lang.Iterable<? extends cloud.stately.db.FilterCondition> values) {
      if (filterConditionsBuilder_ == null) {
        ensureFilterConditionsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, filterConditions_);
        onChanged();
      } else {
        filterConditionsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * filter_conditions is a set of conditions to filter the scan result by.
     * If no conditions are provided, all items in the store will be returned.
     * Filter conditions are combined with OR.
     * </pre>
     *
     * <code>repeated .stately.db.FilterCondition filter_conditions = 2 [json_name = "filterConditions"];</code>
     */
    public Builder clearFilterConditions() {
      if (filterConditionsBuilder_ == null) {
        filterConditions_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        filterConditionsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * filter_conditions is a set of conditions to filter the scan result by.
     * If no conditions are provided, all items in the store will be returned.
     * Filter conditions are combined with OR.
     * </pre>
     *
     * <code>repeated .stately.db.FilterCondition filter_conditions = 2 [json_name = "filterConditions"];</code>
     */
    public Builder removeFilterConditions(int index) {
      if (filterConditionsBuilder_ == null) {
        ensureFilterConditionsIsMutable();
        filterConditions_.remove(index);
        onChanged();
      } else {
        filterConditionsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * filter_conditions is a set of conditions to filter the scan result by.
     * If no conditions are provided, all items in the store will be returned.
     * Filter conditions are combined with OR.
     * </pre>
     *
     * <code>repeated .stately.db.FilterCondition filter_conditions = 2 [json_name = "filterConditions"];</code>
     */
    public cloud.stately.db.FilterCondition.Builder getFilterConditionsBuilder(
        int index) {
      return internalGetFilterConditionsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * filter_conditions is a set of conditions to filter the scan result by.
     * If no conditions are provided, all items in the store will be returned.
     * Filter conditions are combined with OR.
     * </pre>
     *
     * <code>repeated .stately.db.FilterCondition filter_conditions = 2 [json_name = "filterConditions"];</code>
     */
    public cloud.stately.db.FilterConditionOrBuilder getFilterConditionsOrBuilder(
        int index) {
      if (filterConditionsBuilder_ == null) {
        return filterConditions_.get(index);  } else {
        return filterConditionsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * filter_conditions is a set of conditions to filter the scan result by.
     * If no conditions are provided, all items in the store will be returned.
     * Filter conditions are combined with OR.
     * </pre>
     *
     * <code>repeated .stately.db.FilterCondition filter_conditions = 2 [json_name = "filterConditions"];</code>
     */
    public java.util.List<? extends cloud.stately.db.FilterConditionOrBuilder> 
         getFilterConditionsOrBuilderList() {
      if (filterConditionsBuilder_ != null) {
        return filterConditionsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(filterConditions_);
      }
    }
    /**
     * <pre>
     * filter_conditions is a set of conditions to filter the scan result by.
     * If no conditions are provided, all items in the store will be returned.
     * Filter conditions are combined with OR.
     * </pre>
     *
     * <code>repeated .stately.db.FilterCondition filter_conditions = 2 [json_name = "filterConditions"];</code>
     */
    public cloud.stately.db.FilterCondition.Builder addFilterConditionsBuilder() {
      return internalGetFilterConditionsFieldBuilder().addBuilder(
          cloud.stately.db.FilterCondition.getDefaultInstance());
    }
    /**
     * <pre>
     * filter_conditions is a set of conditions to filter the scan result by.
     * If no conditions are provided, all items in the store will be returned.
     * Filter conditions are combined with OR.
     * </pre>
     *
     * <code>repeated .stately.db.FilterCondition filter_conditions = 2 [json_name = "filterConditions"];</code>
     */
    public cloud.stately.db.FilterCondition.Builder addFilterConditionsBuilder(
        int index) {
      return internalGetFilterConditionsFieldBuilder().addBuilder(
          index, cloud.stately.db.FilterCondition.getDefaultInstance());
    }
    /**
     * <pre>
     * filter_conditions is a set of conditions to filter the scan result by.
     * If no conditions are provided, all items in the store will be returned.
     * Filter conditions are combined with OR.
     * </pre>
     *
     * <code>repeated .stately.db.FilterCondition filter_conditions = 2 [json_name = "filterConditions"];</code>
     */
    public java.util.List<cloud.stately.db.FilterCondition.Builder> 
         getFilterConditionsBuilderList() {
      return internalGetFilterConditionsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        cloud.stately.db.FilterCondition, cloud.stately.db.FilterCondition.Builder, cloud.stately.db.FilterConditionOrBuilder> 
        internalGetFilterConditionsFieldBuilder() {
      if (filterConditionsBuilder_ == null) {
        filterConditionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            cloud.stately.db.FilterCondition, cloud.stately.db.FilterCondition.Builder, cloud.stately.db.FilterConditionOrBuilder>(
                filterConditions_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        filterConditions_ = null;
      }
      return filterConditionsBuilder_;
    }

    private int limit_ ;
    /**
     * <pre>
     * limit is the maximum number of items to return. If this is not specified or
     * set to 0, it will return one server side page of items, which may contain zero of your selected
     * item types and hence be an empty response.
     * Be sure to check token.can_continue to see if you have more items left to fetch.
     * </pre>
     *
     * <code>uint32 limit = 3 [json_name = "limit"];</code>
     * @return The limit.
     */
    @java.lang.Override
    public int getLimit() {
      return limit_;
    }
    /**
     * <pre>
     * limit is the maximum number of items to return. If this is not specified or
     * set to 0, it will return one server side page of items, which may contain zero of your selected
     * item types and hence be an empty response.
     * Be sure to check token.can_continue to see if you have more items left to fetch.
     * </pre>
     *
     * <code>uint32 limit = 3 [json_name = "limit"];</code>
     * @param value The limit to set.
     * @return This builder for chaining.
     */
    public Builder setLimit(int value) {

      limit_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * limit is the maximum number of items to return. If this is not specified or
     * set to 0, it will return one server side page of items, which may contain zero of your selected
     * item types and hence be an empty response.
     * Be sure to check token.can_continue to see if you have more items left to fetch.
     * </pre>
     *
     * <code>uint32 limit = 3 [json_name = "limit"];</code>
     * @return This builder for chaining.
     */
    public Builder clearLimit() {
      bitField0_ = (bitField0_ & ~0x00000004);
      limit_ = 0;
      onChanged();
      return this;
    }

    private cloud.stately.db.SegmentationParams segmentationParams_;
    private com.google.protobuf.SingleFieldBuilder<
        cloud.stately.db.SegmentationParams, cloud.stately.db.SegmentationParams.Builder, cloud.stately.db.SegmentationParamsOrBuilder> segmentationParamsBuilder_;
    /**
     * <pre>
     * segmentation_params is used to enable parallelization of the list operation.
     * This is useful for bulk processing of large stores.
     * If this field is set then the list operation will be split into segment_params.total_segments
     * and this request will process the segment defined in segmentation_params.segment_index.
     * See SegmentationParams for more details.
     * Please be warned that parallelization will result on increase throughput to your store
     * which may result in throttling.
     * </pre>
     *
     * <code>.stately.db.SegmentationParams segmentation_params = 4 [json_name = "segmentationParams"];</code>
     * @return Whether the segmentationParams field is set.
     */
    public boolean hasSegmentationParams() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * segmentation_params is used to enable parallelization of the list operation.
     * This is useful for bulk processing of large stores.
     * If this field is set then the list operation will be split into segment_params.total_segments
     * and this request will process the segment defined in segmentation_params.segment_index.
     * See SegmentationParams for more details.
     * Please be warned that parallelization will result on increase throughput to your store
     * which may result in throttling.
     * </pre>
     *
     * <code>.stately.db.SegmentationParams segmentation_params = 4 [json_name = "segmentationParams"];</code>
     * @return The segmentationParams.
     */
    public cloud.stately.db.SegmentationParams getSegmentationParams() {
      if (segmentationParamsBuilder_ == null) {
        return segmentationParams_ == null ? cloud.stately.db.SegmentationParams.getDefaultInstance() : segmentationParams_;
      } else {
        return segmentationParamsBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * segmentation_params is used to enable parallelization of the list operation.
     * This is useful for bulk processing of large stores.
     * If this field is set then the list operation will be split into segment_params.total_segments
     * and this request will process the segment defined in segmentation_params.segment_index.
     * See SegmentationParams for more details.
     * Please be warned that parallelization will result on increase throughput to your store
     * which may result in throttling.
     * </pre>
     *
     * <code>.stately.db.SegmentationParams segmentation_params = 4 [json_name = "segmentationParams"];</code>
     */
    public Builder setSegmentationParams(cloud.stately.db.SegmentationParams value) {
      if (segmentationParamsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        segmentationParams_ = value;
      } else {
        segmentationParamsBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * segmentation_params is used to enable parallelization of the list operation.
     * This is useful for bulk processing of large stores.
     * If this field is set then the list operation will be split into segment_params.total_segments
     * and this request will process the segment defined in segmentation_params.segment_index.
     * See SegmentationParams for more details.
     * Please be warned that parallelization will result on increase throughput to your store
     * which may result in throttling.
     * </pre>
     *
     * <code>.stately.db.SegmentationParams segmentation_params = 4 [json_name = "segmentationParams"];</code>
     */
    public Builder setSegmentationParams(
        cloud.stately.db.SegmentationParams.Builder builderForValue) {
      if (segmentationParamsBuilder_ == null) {
        segmentationParams_ = builderForValue.build();
      } else {
        segmentationParamsBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * segmentation_params is used to enable parallelization of the list operation.
     * This is useful for bulk processing of large stores.
     * If this field is set then the list operation will be split into segment_params.total_segments
     * and this request will process the segment defined in segmentation_params.segment_index.
     * See SegmentationParams for more details.
     * Please be warned that parallelization will result on increase throughput to your store
     * which may result in throttling.
     * </pre>
     *
     * <code>.stately.db.SegmentationParams segmentation_params = 4 [json_name = "segmentationParams"];</code>
     */
    public Builder mergeSegmentationParams(cloud.stately.db.SegmentationParams value) {
      if (segmentationParamsBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0) &&
          segmentationParams_ != null &&
          segmentationParams_ != cloud.stately.db.SegmentationParams.getDefaultInstance()) {
          getSegmentationParamsBuilder().mergeFrom(value);
        } else {
          segmentationParams_ = value;
        }
      } else {
        segmentationParamsBuilder_.mergeFrom(value);
      }
      if (segmentationParams_ != null) {
        bitField0_ |= 0x00000008;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * segmentation_params is used to enable parallelization of the list operation.
     * This is useful for bulk processing of large stores.
     * If this field is set then the list operation will be split into segment_params.total_segments
     * and this request will process the segment defined in segmentation_params.segment_index.
     * See SegmentationParams for more details.
     * Please be warned that parallelization will result on increase throughput to your store
     * which may result in throttling.
     * </pre>
     *
     * <code>.stately.db.SegmentationParams segmentation_params = 4 [json_name = "segmentationParams"];</code>
     */
    public Builder clearSegmentationParams() {
      bitField0_ = (bitField0_ & ~0x00000008);
      segmentationParams_ = null;
      if (segmentationParamsBuilder_ != null) {
        segmentationParamsBuilder_.dispose();
        segmentationParamsBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * segmentation_params is used to enable parallelization of the list operation.
     * This is useful for bulk processing of large stores.
     * If this field is set then the list operation will be split into segment_params.total_segments
     * and this request will process the segment defined in segmentation_params.segment_index.
     * See SegmentationParams for more details.
     * Please be warned that parallelization will result on increase throughput to your store
     * which may result in throttling.
     * </pre>
     *
     * <code>.stately.db.SegmentationParams segmentation_params = 4 [json_name = "segmentationParams"];</code>
     */
    public cloud.stately.db.SegmentationParams.Builder getSegmentationParamsBuilder() {
      bitField0_ |= 0x00000008;
      onChanged();
      return internalGetSegmentationParamsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * segmentation_params is used to enable parallelization of the list operation.
     * This is useful for bulk processing of large stores.
     * If this field is set then the list operation will be split into segment_params.total_segments
     * and this request will process the segment defined in segmentation_params.segment_index.
     * See SegmentationParams for more details.
     * Please be warned that parallelization will result on increase throughput to your store
     * which may result in throttling.
     * </pre>
     *
     * <code>.stately.db.SegmentationParams segmentation_params = 4 [json_name = "segmentationParams"];</code>
     */
    public cloud.stately.db.SegmentationParamsOrBuilder getSegmentationParamsOrBuilder() {
      if (segmentationParamsBuilder_ != null) {
        return segmentationParamsBuilder_.getMessageOrBuilder();
      } else {
        return segmentationParams_ == null ?
            cloud.stately.db.SegmentationParams.getDefaultInstance() : segmentationParams_;
      }
    }
    /**
     * <pre>
     * segmentation_params is used to enable parallelization of the list operation.
     * This is useful for bulk processing of large stores.
     * If this field is set then the list operation will be split into segment_params.total_segments
     * and this request will process the segment defined in segmentation_params.segment_index.
     * See SegmentationParams for more details.
     * Please be warned that parallelization will result on increase throughput to your store
     * which may result in throttling.
     * </pre>
     *
     * <code>.stately.db.SegmentationParams segmentation_params = 4 [json_name = "segmentationParams"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        cloud.stately.db.SegmentationParams, cloud.stately.db.SegmentationParams.Builder, cloud.stately.db.SegmentationParamsOrBuilder> 
        internalGetSegmentationParamsFieldBuilder() {
      if (segmentationParamsBuilder_ == null) {
        segmentationParamsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            cloud.stately.db.SegmentationParams, cloud.stately.db.SegmentationParams.Builder, cloud.stately.db.SegmentationParamsOrBuilder>(
                getSegmentationParams(),
                getParentForChildren(),
                isClean());
        segmentationParams_ = null;
      }
      return segmentationParamsBuilder_;
    }

    private int schemaVersionId_ ;
    /**
     * <pre>
     * schema_version_id is the version of the store's schema to use to interpret
     * items. If there is no version with this ID, the operation will error with
     * SchemaVersionNotFound error. You should not have to set this manually as
     * your generated SDK should know its schema version and wire this in for you.
     * </pre>
     *
     * <code>uint32 schema_version_id = 5 [json_name = "schemaVersionId"];</code>
     * @return The schemaVersionId.
     */
    @java.lang.Override
    public int getSchemaVersionId() {
      return schemaVersionId_;
    }
    /**
     * <pre>
     * schema_version_id is the version of the store's schema to use to interpret
     * items. If there is no version with this ID, the operation will error with
     * SchemaVersionNotFound error. You should not have to set this manually as
     * your generated SDK should know its schema version and wire this in for you.
     * </pre>
     *
     * <code>uint32 schema_version_id = 5 [json_name = "schemaVersionId"];</code>
     * @param value The schemaVersionId to set.
     * @return This builder for chaining.
     */
    public Builder setSchemaVersionId(int value) {

      schemaVersionId_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * schema_version_id is the version of the store's schema to use to interpret
     * items. If there is no version with this ID, the operation will error with
     * SchemaVersionNotFound error. You should not have to set this manually as
     * your generated SDK should know its schema version and wire this in for you.
     * </pre>
     *
     * <code>uint32 schema_version_id = 5 [json_name = "schemaVersionId"];</code>
     * @return This builder for chaining.
     */
    public Builder clearSchemaVersionId() {
      bitField0_ = (bitField0_ & ~0x00000010);
      schemaVersionId_ = 0;
      onChanged();
      return this;
    }

    private long schemaId_ ;
    /**
     * <pre>
     * schema_id refers to the schema to use for this operation.
     * If the store_id does not have a schema with this ID, the operation will
     * error with SchemaNotFound error. You should not have to set this manually
     * as your generated SDK should know its schema and wire this in for you.
     * </pre>
     *
     * <code>uint64 schema_id = 6 [json_name = "schemaId"];</code>
     * @return The schemaId.
     */
    @java.lang.Override
    public long getSchemaId() {
      return schemaId_;
    }
    /**
     * <pre>
     * schema_id refers to the schema to use for this operation.
     * If the store_id does not have a schema with this ID, the operation will
     * error with SchemaNotFound error. You should not have to set this manually
     * as your generated SDK should know its schema and wire this in for you.
     * </pre>
     *
     * <code>uint64 schema_id = 6 [json_name = "schemaId"];</code>
     * @param value The schemaId to set.
     * @return This builder for chaining.
     */
    public Builder setSchemaId(long value) {

      schemaId_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * schema_id refers to the schema to use for this operation.
     * If the store_id does not have a schema with this ID, the operation will
     * error with SchemaNotFound error. You should not have to set this manually
     * as your generated SDK should know its schema and wire this in for you.
     * </pre>
     *
     * <code>uint64 schema_id = 6 [json_name = "schemaId"];</code>
     * @return This builder for chaining.
     */
    public Builder clearSchemaId() {
      bitField0_ = (bitField0_ & ~0x00000020);
      schemaId_ = 0L;
      onChanged();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:stately.db.BeginScanRequest)
  }

  // @@protoc_insertion_point(class_scope:stately.db.BeginScanRequest)
  private static final cloud.stately.db.BeginScanRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new cloud.stately.db.BeginScanRequest();
  }

  public static cloud.stately.db.BeginScanRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<BeginScanRequest>
      PARSER = new com.google.protobuf.AbstractParser<BeginScanRequest>() {
    @java.lang.Override
    public BeginScanRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<BeginScanRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<BeginScanRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public cloud.stately.db.BeginScanRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

