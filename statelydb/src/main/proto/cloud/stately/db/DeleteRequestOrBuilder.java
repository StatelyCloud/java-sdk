// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: db/delete.proto
// Protobuf Java Version: 4.32.0

package cloud.stately.db;

@com.google.protobuf.Generated
public interface DeleteRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:stately.db.DeleteRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * store_id is a globally unique Store ID, which can be looked up from the
   * console or CLI.
   * </pre>
   *
   * <code>uint64 store_id = 1 [json_name = "storeId"];</code>
   * @return The storeId.
   */
  long getStoreId();

  /**
   * <pre>
   * key paths of items to delete.
   * </pre>
   *
   * <code>repeated .stately.db.DeleteItem deletes = 3 [json_name = "deletes"];</code>
   */
  java.util.List<cloud.stately.db.DeleteItem> 
      getDeletesList();
  /**
   * <pre>
   * key paths of items to delete.
   * </pre>
   *
   * <code>repeated .stately.db.DeleteItem deletes = 3 [json_name = "deletes"];</code>
   */
  cloud.stately.db.DeleteItem getDeletes(int index);
  /**
   * <pre>
   * key paths of items to delete.
   * </pre>
   *
   * <code>repeated .stately.db.DeleteItem deletes = 3 [json_name = "deletes"];</code>
   */
  int getDeletesCount();
  /**
   * <pre>
   * key paths of items to delete.
   * </pre>
   *
   * <code>repeated .stately.db.DeleteItem deletes = 3 [json_name = "deletes"];</code>
   */
  java.util.List<? extends cloud.stately.db.DeleteItemOrBuilder> 
      getDeletesOrBuilderList();
  /**
   * <pre>
   * key paths of items to delete.
   * </pre>
   *
   * <code>repeated .stately.db.DeleteItem deletes = 3 [json_name = "deletes"];</code>
   */
  cloud.stately.db.DeleteItemOrBuilder getDeletesOrBuilder(
      int index);

  /**
   * <pre>
   * schema_version_id refers to the item version to delete from.
   *
   * If the store's schema does not have this version, the operation
   * will error with SchemaVersionNotFound error. You should not have to
   * set this manually as your generated SDK should know its schema version
   * and wire this in for you.
   * </pre>
   *
   * <code>uint32 schema_version_id = 5 [json_name = "schemaVersionId"];</code>
   * @return The schemaVersionId.
   */
  int getSchemaVersionId();

  /**
   * <pre>
   * schema_id refers to the schema to use for this operation.
   * If the store_id does not have a schema with this ID, the operation will
   * error with SchemaNotFound error. You should not have to set this manually
   * as your generated SDK should know its schema and wire this in for you.
   * </pre>
   *
   * <code>uint64 schema_id = 6 [json_name = "schemaId"];</code>
   * @return The schemaId.
   */
  long getSchemaId();
}
