// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: db/put.proto
// Protobuf Java Version: 4.32.0

package cloud.stately.db;

@com.google.protobuf.Generated
public interface PutItemOrBuilder extends
    // @@protoc_insertion_point(interface_extends:stately.db.PutItem)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * item is the data to be put, including its item_type.
   * </pre>
   *
   * <code>.stately.db.Item item = 1 [json_name = "item"];</code>
   * @return Whether the item field is set.
   */
  boolean hasItem();
  /**
   * <pre>
   * item is the data to be put, including its item_type.
   * </pre>
   *
   * <code>.stately.db.Item item = 1 [json_name = "item"];</code>
   * @return The item.
   */
  cloud.stately.db.Item getItem();
  /**
   * <pre>
   * item is the data to be put, including its item_type.
   * </pre>
   *
   * <code>.stately.db.Item item = 1 [json_name = "item"];</code>
   */
  cloud.stately.db.ItemOrBuilder getItemOrBuilder();

  /**
   * <pre>
   * overwrite_metadata_timestamps indicates that any "fromMetadata" timestamp
   * fields in the incoming payload should be saved as provided in the database.
   * Normally these would be ignored as they are automatically maintained, but
   * this flag can be useful for migrations from other systems. Note that this
   * only works for timestamps (createdAtTime and lastModifiedAtTime) - versions
   * cannot be overridden.
   * </pre>
   *
   * <code>bool overwrite_metadata_timestamps = 2 [json_name = "overwriteMetadataTimestamps"];</code>
   * @return The overwriteMetadataTimestamps.
   */
  boolean getOverwriteMetadataTimestamps();

  /**
   * <pre>
   * must_not_exist is a condition that indicates this item must not already
   * exist at any of its key paths. If there is already an item at one of those
   * paths, the Put operation will fail with a ConditionalCheckFailed error.
   * Note that if the item has an `initialValue` field in its key, that initial
   * value will automatically be chosen not to conflict with existing items, so
   * this condition only applies to key paths that do not contain the
   * `initialValue` field.
   * </pre>
   *
   * <code>bool must_not_exist = 3 [json_name = "mustNotExist"];</code>
   * @return The mustNotExist.
   */
  boolean getMustNotExist();
}
