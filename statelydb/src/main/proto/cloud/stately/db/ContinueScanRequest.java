// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: db/continue_scan.proto
// Protobuf Java Version: 4.32.0

package cloud.stately.db;

/**
 * Protobuf type {@code stately.db.ContinueScanRequest}
 */
@com.google.protobuf.Generated
public final class ContinueScanRequest extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:stately.db.ContinueScanRequest)
    ContinueScanRequestOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 32,
      /* patch= */ 0,
      /* suffix= */ "",
      ContinueScanRequest.class.getName());
  }
  // Use ContinueScanRequest.newBuilder() to construct.
  private ContinueScanRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private ContinueScanRequest() {
    tokenData_ = com.google.protobuf.ByteString.EMPTY;
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return cloud.stately.db.ContinueScanProto.internal_static_stately_db_ContinueScanRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return cloud.stately.db.ContinueScanProto.internal_static_stately_db_ContinueScanRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            cloud.stately.db.ContinueScanRequest.class, cloud.stately.db.ContinueScanRequest.Builder.class);
  }

  public static final int TOKEN_DATA_FIELD_NUMBER = 1;
  private com.google.protobuf.ByteString tokenData_ = com.google.protobuf.ByteString.EMPTY;
  /**
   * <pre>
   * token_data is an opaque list continuation token returned by a previous call
   * to BeginScan or ContinueScan.
   * </pre>
   *
   * <code>bytes token_data = 1 [json_name = "tokenData"];</code>
   * @return The tokenData.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getTokenData() {
    return tokenData_;
  }

  public static final int SCHEMA_VERSION_ID_FIELD_NUMBER = 2;
  private int schemaVersionId_ = 0;
  /**
   * <pre>
   * schema_version_id is the schema version id the client is using. This is
   * used to ensure the same schema version is used across each page of the list.
   * If the version the token was created with is different from the client's
   * current version, the operation will error with SchemaVersionMismatch error,
   * in which case you should start over with a fresh BeginScan call.
   * </pre>
   *
   * <code>uint32 schema_version_id = 2 [json_name = "schemaVersionId"];</code>
   * @return The schemaVersionId.
   */
  @java.lang.Override
  public int getSchemaVersionId() {
    return schemaVersionId_;
  }

  public static final int SCHEMA_ID_FIELD_NUMBER = 3;
  private long schemaId_ = 0L;
  /**
   * <pre>
   * schema_id refers to the schema to use for this operation.
   * If the store_id does not have a schema with this ID, the operation will
   * error with SchemaNotFound error. You should not have to set this manually
   * as your generated SDK should know its schema and wire this in for you.
   * </pre>
   *
   * <code>uint64 schema_id = 3 [json_name = "schemaId"];</code>
   * @return The schemaId.
   */
  @java.lang.Override
  public long getSchemaId() {
    return schemaId_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!tokenData_.isEmpty()) {
      output.writeBytes(1, tokenData_);
    }
    if (schemaVersionId_ != 0) {
      output.writeUInt32(2, schemaVersionId_);
    }
    if (schemaId_ != 0L) {
      output.writeUInt64(3, schemaId_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!tokenData_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(1, tokenData_);
    }
    if (schemaVersionId_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(2, schemaVersionId_);
    }
    if (schemaId_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(3, schemaId_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof cloud.stately.db.ContinueScanRequest)) {
      return super.equals(obj);
    }
    cloud.stately.db.ContinueScanRequest other = (cloud.stately.db.ContinueScanRequest) obj;

    if (!getTokenData()
        .equals(other.getTokenData())) return false;
    if (getSchemaVersionId()
        != other.getSchemaVersionId()) return false;
    if (getSchemaId()
        != other.getSchemaId()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TOKEN_DATA_FIELD_NUMBER;
    hash = (53 * hash) + getTokenData().hashCode();
    hash = (37 * hash) + SCHEMA_VERSION_ID_FIELD_NUMBER;
    hash = (53 * hash) + getSchemaVersionId();
    hash = (37 * hash) + SCHEMA_ID_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getSchemaId());
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static cloud.stately.db.ContinueScanRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static cloud.stately.db.ContinueScanRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static cloud.stately.db.ContinueScanRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static cloud.stately.db.ContinueScanRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static cloud.stately.db.ContinueScanRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static cloud.stately.db.ContinueScanRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static cloud.stately.db.ContinueScanRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static cloud.stately.db.ContinueScanRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static cloud.stately.db.ContinueScanRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static cloud.stately.db.ContinueScanRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static cloud.stately.db.ContinueScanRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static cloud.stately.db.ContinueScanRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(cloud.stately.db.ContinueScanRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code stately.db.ContinueScanRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:stately.db.ContinueScanRequest)
      cloud.stately.db.ContinueScanRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cloud.stately.db.ContinueScanProto.internal_static_stately_db_ContinueScanRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cloud.stately.db.ContinueScanProto.internal_static_stately_db_ContinueScanRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cloud.stately.db.ContinueScanRequest.class, cloud.stately.db.ContinueScanRequest.Builder.class);
    }

    // Construct using cloud.stately.db.ContinueScanRequest.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      tokenData_ = com.google.protobuf.ByteString.EMPTY;
      schemaVersionId_ = 0;
      schemaId_ = 0L;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return cloud.stately.db.ContinueScanProto.internal_static_stately_db_ContinueScanRequest_descriptor;
    }

    @java.lang.Override
    public cloud.stately.db.ContinueScanRequest getDefaultInstanceForType() {
      return cloud.stately.db.ContinueScanRequest.getDefaultInstance();
    }

    @java.lang.Override
    public cloud.stately.db.ContinueScanRequest build() {
      cloud.stately.db.ContinueScanRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public cloud.stately.db.ContinueScanRequest buildPartial() {
      cloud.stately.db.ContinueScanRequest result = new cloud.stately.db.ContinueScanRequest(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(cloud.stately.db.ContinueScanRequest result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.tokenData_ = tokenData_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.schemaVersionId_ = schemaVersionId_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.schemaId_ = schemaId_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof cloud.stately.db.ContinueScanRequest) {
        return mergeFrom((cloud.stately.db.ContinueScanRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(cloud.stately.db.ContinueScanRequest other) {
      if (other == cloud.stately.db.ContinueScanRequest.getDefaultInstance()) return this;
      if (!other.getTokenData().isEmpty()) {
        setTokenData(other.getTokenData());
      }
      if (other.getSchemaVersionId() != 0) {
        setSchemaVersionId(other.getSchemaVersionId());
      }
      if (other.getSchemaId() != 0L) {
        setSchemaId(other.getSchemaId());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              tokenData_ = input.readBytes();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 16: {
              schemaVersionId_ = input.readUInt32();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 24: {
              schemaId_ = input.readUInt64();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.ByteString tokenData_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * token_data is an opaque list continuation token returned by a previous call
     * to BeginScan or ContinueScan.
     * </pre>
     *
     * <code>bytes token_data = 1 [json_name = "tokenData"];</code>
     * @return The tokenData.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getTokenData() {
      return tokenData_;
    }
    /**
     * <pre>
     * token_data is an opaque list continuation token returned by a previous call
     * to BeginScan or ContinueScan.
     * </pre>
     *
     * <code>bytes token_data = 1 [json_name = "tokenData"];</code>
     * @param value The tokenData to set.
     * @return This builder for chaining.
     */
    public Builder setTokenData(com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      tokenData_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * token_data is an opaque list continuation token returned by a previous call
     * to BeginScan or ContinueScan.
     * </pre>
     *
     * <code>bytes token_data = 1 [json_name = "tokenData"];</code>
     * @return This builder for chaining.
     */
    public Builder clearTokenData() {
      bitField0_ = (bitField0_ & ~0x00000001);
      tokenData_ = getDefaultInstance().getTokenData();
      onChanged();
      return this;
    }

    private int schemaVersionId_ ;
    /**
     * <pre>
     * schema_version_id is the schema version id the client is using. This is
     * used to ensure the same schema version is used across each page of the list.
     * If the version the token was created with is different from the client's
     * current version, the operation will error with SchemaVersionMismatch error,
     * in which case you should start over with a fresh BeginScan call.
     * </pre>
     *
     * <code>uint32 schema_version_id = 2 [json_name = "schemaVersionId"];</code>
     * @return The schemaVersionId.
     */
    @java.lang.Override
    public int getSchemaVersionId() {
      return schemaVersionId_;
    }
    /**
     * <pre>
     * schema_version_id is the schema version id the client is using. This is
     * used to ensure the same schema version is used across each page of the list.
     * If the version the token was created with is different from the client's
     * current version, the operation will error with SchemaVersionMismatch error,
     * in which case you should start over with a fresh BeginScan call.
     * </pre>
     *
     * <code>uint32 schema_version_id = 2 [json_name = "schemaVersionId"];</code>
     * @param value The schemaVersionId to set.
     * @return This builder for chaining.
     */
    public Builder setSchemaVersionId(int value) {

      schemaVersionId_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * schema_version_id is the schema version id the client is using. This is
     * used to ensure the same schema version is used across each page of the list.
     * If the version the token was created with is different from the client's
     * current version, the operation will error with SchemaVersionMismatch error,
     * in which case you should start over with a fresh BeginScan call.
     * </pre>
     *
     * <code>uint32 schema_version_id = 2 [json_name = "schemaVersionId"];</code>
     * @return This builder for chaining.
     */
    public Builder clearSchemaVersionId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      schemaVersionId_ = 0;
      onChanged();
      return this;
    }

    private long schemaId_ ;
    /**
     * <pre>
     * schema_id refers to the schema to use for this operation.
     * If the store_id does not have a schema with this ID, the operation will
     * error with SchemaNotFound error. You should not have to set this manually
     * as your generated SDK should know its schema and wire this in for you.
     * </pre>
     *
     * <code>uint64 schema_id = 3 [json_name = "schemaId"];</code>
     * @return The schemaId.
     */
    @java.lang.Override
    public long getSchemaId() {
      return schemaId_;
    }
    /**
     * <pre>
     * schema_id refers to the schema to use for this operation.
     * If the store_id does not have a schema with this ID, the operation will
     * error with SchemaNotFound error. You should not have to set this manually
     * as your generated SDK should know its schema and wire this in for you.
     * </pre>
     *
     * <code>uint64 schema_id = 3 [json_name = "schemaId"];</code>
     * @param value The schemaId to set.
     * @return This builder for chaining.
     */
    public Builder setSchemaId(long value) {

      schemaId_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * schema_id refers to the schema to use for this operation.
     * If the store_id does not have a schema with this ID, the operation will
     * error with SchemaNotFound error. You should not have to set this manually
     * as your generated SDK should know its schema and wire this in for you.
     * </pre>
     *
     * <code>uint64 schema_id = 3 [json_name = "schemaId"];</code>
     * @return This builder for chaining.
     */
    public Builder clearSchemaId() {
      bitField0_ = (bitField0_ & ~0x00000004);
      schemaId_ = 0L;
      onChanged();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:stately.db.ContinueScanRequest)
  }

  // @@protoc_insertion_point(class_scope:stately.db.ContinueScanRequest)
  private static final cloud.stately.db.ContinueScanRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new cloud.stately.db.ContinueScanRequest();
  }

  public static cloud.stately.db.ContinueScanRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ContinueScanRequest>
      PARSER = new com.google.protobuf.AbstractParser<ContinueScanRequest>() {
    @java.lang.Override
    public ContinueScanRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<ContinueScanRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ContinueScanRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public cloud.stately.db.ContinueScanRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

